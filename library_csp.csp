-- Buffer
-- adapted from standard FDR2 example

datatype FRUIT = apples | oranges | pears
datatype USER = Tom | Jennie | Alahkba
datatype BOOK = Ave | Eno | Eau
datatype AVAILABLE = yes | no

channel left,right,mid: FRUIT
channel ack

channel newuser,remove,userinfo,login:USER
channel removed,unabletoremove

channel lend, bookinfo,addbook,removebook,borrowrequest,reserve: BOOK
channel canlend,cannotlend


channel returnbook,buymember,setbookcat,borrowed, unavailable,reserved,logout,cannotreserve
channel check,canreserve:AVAILABLE


LIBRARY_CHECK= (borrowrequest ? b ->  check?c->LIBRARY_CHECK) [] (reserve?b->canreserve?c->LIBRARY_CHECK)

USERINIT = userinfo?u -> login!u ->(buymember->USERIDLE [] USERIDLE )

USERIDLE = (borrowrequest?b ->check?c->(borrowed->USERIDLE |~| unavailable->USERIDLE )) [] (returnbook->USERIDLE) [] (logout->USERINIT) [] (reserve?b->canreserve?c->(reserved->USERIDLE |~| cannotreserve->USERIDLE ))

LIBRARYINIT = (addbook?b->setbookcat->LIBRARYINIT) [] (removebook?b->LIBRARYINIT) [] ( newuser ? u -> userinfo!u-> LIBRARYINIT ) [] remove ? u -> ((removed-> LIBRARYINIT ) |~| (unabletoremove-> LIBRARYINIT  ))

LIBRARY_SYSTEM = LIBRARYINIT  [| {|userinfo|}|] USERINIT  [| {|check,borrowrequest,reserve,canreserve|}|]LIBRARY_CHECK

PROB_TEST_TRACE = addbook.Ave -> setbookcat -> login.Tom ->newuser.Tom -> userinfo.Tom -> login.Tom -> buymember -> borrowrequest.Ave -> check.no -> borrowed -> logout -> STOP

GEN = left!Ave -> GEN [] left!Eno -> GEN [] left!Eau -> GEN

MAIN = LIBRARY_SYSTEM [| {|left|} |] GEN

assert MAIN [T= PROB_TEST_TRACE